<?xml version="1.0" encoding="UTF-8"?>
<ruleset name ="yggdrasil's ruleset"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>Alchemist PMD Plugin preferences rule set</description>
	<rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
	<rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
	<rule ref="category/java/bestpractices.xml/AccessorClassGeneration" />
	<rule ref="category/java/performance.xml/AddEmptyString" />
	<rule ref="category/java/performance.xml/AppendCharacterWithChar" />
	<rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
	<rule ref="category/java/errorprone.xml/AssignmentInOperand" />
	<rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic" />
	<rule ref="category/java/errorprone.xml/AvoidAccessibilityAlteration" />
	<rule ref="category/java/performance.xml/AvoidArrayLoops" />
	<rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier" />
	<rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
	<rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
	<rule ref="category/java/errorprone.xml/AvoidCatchingNPE" />
	<rule ref="category/java/errorprone.xml/AvoidCatchingThrowable" />
	<rule ref="category/java/bestpractices.xml/ConstantsInInterface" />
	<rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
	<rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
	<rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals" />
	<rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier" />
	<rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName" />
	<rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName" />
	<rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
	<rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation" />
	<rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
	<rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
	<rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
	<rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
	<rule ref="category/java/design.xml/AvoidRethrowingException" />
	<rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
	<rule ref="category/java/multithreading.xml/AvoidThreadGroup" />
	<rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
	<rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
	<rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
	<rule ref="category/java/codestyle.xml/AvoidUsingNativeCode" />
	<rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
	<rule ref="category/java/errorprone.xml/ComparisonWithNaN" />
	<rule ref="category/java/performance.xml/BigIntegerInstantiation" />
	<rule ref="category/java/codestyle.xml/BooleanGetMethodName" />
	<rule ref="category/java/errorprone.xml/BrokenNullCheck" />
	<rule ref="category/java/errorprone.xml/CallSuperFirst" />
	<rule ref="category/java/codestyle.xml/CallSuperInConstructor" />
	<rule ref="category/java/errorprone.xml/CallSuperLast" />
	<rule ref="category/java/bestpractices.xml/CheckResultSet" />
	<rule ref="category/java/errorprone.xml/CheckSkipResult" />
	<rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
	<rule ref="category/java/codestyle.xml/ClassNamingConventions" />
	<rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
	<rule ref="category/java/errorprone.xml/CloseResource" />
	<rule ref="category/java/design.xml/CollapsibleIfStatements" />
	<rule ref="category/java/documentation.xml/CommentContent" />
	<rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
	<rule ref="category/java/performance.xml/ConsecutiveLiteralAppends" />
	<rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod" />
	<rule ref="category/java/design.xml/CouplingBetweenObjects" />
	<rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
	<rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly" />
	<rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
	<rule ref="category/java/errorprone.xml/DoNotHardCodeSDCard" />
	<rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally" />
	<rule ref="category/java/multithreading.xml/DontCallThreadRun" />
	<rule ref="category/java/errorprone.xml/DontImportSun" />
	<rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
	<rule ref="category/java/multithreading.xml/DoubleCheckedLocking" />
	<rule ref="category/java/errorprone.xml/EmptyCatchBlock" />
	<rule ref="category/java/errorprone.xml/EmptyFinalizer" />
	<rule ref="category/java/errorprone.xml/EqualsNull" />
	<rule ref="category/java/design.xml/ExceptionAsFlowControl" />
	<rule ref="category/java/design.xml/ExcessivePublicCount" />
	<rule ref="category/java/codestyle.xml/ExtendsObject" />
	<rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass" />
	<rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
	<rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize" />
	<rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize" />
	<rule ref="category/java/errorprone.xml/FinalizeOverloaded" />
	<rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected" />
	<rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
	<rule ref="category/java/codestyle.xml/GenericsNaming" />
	<rule ref="category/java/errorprone.xml/IdempotentOperations" />
	<rule ref="category/java/design.xml/ImmutableField" />
	<rule ref="category/java/performance.xml/InefficientEmptyStringCheck" />
	<rule ref="category/java/performance.xml/InefficientStringBuffering" />
	<rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
	<rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration" />
	<rule ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation" />
	<rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation" />
	<rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation" />
	<rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation" />
	<rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage" />
	<rule ref="category/java/errorprone.xml/JUnitSpelling" />
	<rule ref="category/java/errorprone.xml/JUnitStaticSuite" />
	<rule ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert" />
	<rule ref="category/java/bestpractices.xml/JUnitUseExpected" />
	<rule ref="category/java/errorprone.xml/JumbledIncrementer" />
	<rule ref="category/java/codestyle.xml/LocalHomeNamingConvention" />
	<rule ref="category/java/codestyle.xml/LocalInterfaceSessionNamingConvention" />
	<rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal" />
	<rule ref="category/java/design.xml/LogicInversion" />
  <rule ref="category/java/bestpractices.xml/LooseCoupling">
    <properties>
      <property name="allowedTypes" value="java.util.Map" />
    </properties>
  </rule>
	<rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal" />
	<rule ref="category/java/codestyle.xml/MethodNamingConventions" />
	<rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />
	<rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass" />
	<rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
	<rule ref="category/java/errorprone.xml/MissingSerialVersionUID" />
	<rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass" />
	<rule ref="category/java/errorprone.xml/MoreThanOneLogger" />
	<rule ref="category/java/codestyle.xml/NoPackage" />
	<rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
	<rule ref="category/java/errorprone.xml/NonStaticInitializer" />
	<rule ref="category/java/multithreading.xml/NonThreadSafeSingleton" />
	<rule ref="category/java/performance.xml/OptimizableToArrayCall" />
	<rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
	<rule ref="category/java/codestyle.xml/PackageCase" />
	<rule ref="category/java/codestyle.xml/PrematureDeclaration" />
	<rule ref="category/java/errorprone.xml/ProperLogger" />
	<rule ref="category/java/performance.xml/RedundantFieldInitializer" />
	<rule ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention" />
	<rule ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention" />
	<rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator" />
	<rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap" />
	<rule ref="category/java/bestpractices.xml/ReplaceVectorWithList" />
	<rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
	<rule ref="category/java/design.xml/SignatureDeclareThrowsException" />
	<rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale" />
	<rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
	<rule ref="category/java/design.xml/SimplifyBooleanReturns" />
	<rule ref="category/java/design.xml/SimplifyConditional" />
	<rule ref="category/java/design.xml/SingularField" />
	<rule ref="category/java/errorprone.xml/StaticEJBFieldShouldBeFinal" />
	<rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar" />
	<rule ref="category/java/performance.xml/StringInstantiation" />
	<rule ref="category/java/performance.xml/StringToString" />
	<rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName" />
	<rule ref="category/java/errorprone.xml/SuspiciousOctalEscape" />
	<rule ref="category/java/design.xml/SwitchDensity" />
	<rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
	<rule ref="category/java/errorprone.xml/TestClassWithoutTestCases" />
	<rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement" />
	<rule ref="category/java/documentation.xml/UncommentedEmptyConstructor" />
	<rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />
	<rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion" />
	<rule ref="category/java/errorprone.xml/UnnecessaryCaseChange" />
	<rule ref="category/java/codestyle.xml/UnnecessaryConstructor" />
	<rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary" />
	<rule ref="category/java/codestyle.xml/UnnecessaryModifier" />
	<rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />
	<rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />
	<rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
	<rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
	<rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
	<rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals" />
	<rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
	<rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
    <properties>
      <property name="ignoredAnnotations" value="java.lang.Deprecated,cartago.OPERATION,cartago.INTERNAL_OPERATION,cartago.GUARD" />
    </properties>
  </rule>
	<rule ref="category/java/performance.xml/UseArrayListInsteadOfVector" />
	<rule ref="category/java/performance.xml/UseArraysAsList" />
	<rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
	<rule ref="category/java/errorprone.xml/UseCorrectExceptionLogging" />
	<rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
	<rule ref="category/java/performance.xml/UseIndexOfChar" />
	<rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions" />
	<rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify" />
	<rule ref="category/java/design.xml/UseObjectForClearerAPI" />
	<rule ref="category/java/performance.xml/UseStringBufferLength" />
	<rule ref="category/java/design.xml/UseUtilityClass" />
	<rule ref="category/java/errorprone.xml/UselessOperationOnImmutable" />
	<rule ref="category/java/design.xml/UselessOverridingMethod" />
	<rule ref="category/java/performance.xml/UselessStringValueOf" />
	<rule ref="category/java/bestpractices.xml/UseVarargs" />
</ruleset>
