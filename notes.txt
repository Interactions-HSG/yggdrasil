! MOST IMPORTANT FOR RELEASE !

+ websub check

// only after release!
+ Think where signifier exposure mechanism could fit in yggdrasil
+ Implement small version with xArm example
+ think of interesting domain use case for context aware signifiers


++ LIST OF FEATURES ++
- WebID
  - Issue 39 & 40 - Regarding WebID & Change of join / leave API
    - Change that join and leave refer to agent body resource.
      - Joining would be done by POST request to body.
      - Leaving would be done by DELETE request to body.
    - Allow more WebIDs
      - Comply with the Web ID Standard
      - Future support for SOLID OIDC
  - Implement authentication mechanism
  - Issue 42 - Should be implemented now, atleast with HMAS
    - The agent representations could be redundant, notably if no other motivating use case can be found.
      - Agents are representations are just artifacts


  - Issue 44 - Update architecture file


- Check Correct URIs everywhere


++++++++++++++++++++++

+ update TD representation same as HMAS
  Need to add basics such as websub handling


+ add testcase where base is not localhost:8080

IMPLEMENTED:
- HypermediaArtifactRegistry no longer a singleton (ISSUE 45)
  - Only problem is that spotBugs complains. Registry is mutable and not final
  org.hyperagents.yggdrasil.cartago.artifacts.HypermediaTDArtifact.init(HypermediaArtifactRegistry) may expose internal representation by storing an externally mutable object into HypermediaTDArtifact.registry
  Bug type EI_EXPOSE_REP2 (click for details)
  In class org.hyperagents.yggdrasil.cartago.artifacts.HypermediaTDArtifact
  In method org.hyperagents.yggdrasil.cartago.artifacts.HypermediaTDArtifact.init(HypermediaArtifactRegistry)
  Field org.hyperagents.yggdrasil.cartago.artifacts.HypermediaTDArtifact.registry
  Local variable named registry
  At HypermediaTDArtifact.java:[line 52]

- Cartago updated, all actions should work + deletion of workspaces
  - Only problem is do not know what I am missing from Matteos version

- Artifacts refactored, output specifications are now needed
  - Same as input, but for output
  - Could be extended to typesafe input / output representations

- Default ontology is TD
